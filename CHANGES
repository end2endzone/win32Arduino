Changes for 2.3.0:

* New feature: Added support for doxygen API documentation. See build option `WIN32ARDUINO_BUILD_DOC` for details.
* Fixed issue #28 - Implement 'make install' command support.
* Fixed issue #29 - Define if `Arduino.h` or `arduino.h`
* Fixed issue #27 - License header in all files.

Changes for 2.2.0:

* New feature: New version handling code for scripts: Replaced `version_info.*` files by `/version` which is generated when running cmake. It is now up to each platform to parse the file and extract the current version.
* New feature: Implemented support for `Serial.print(value, radix)` with `DEC`, `HEX`, `OCT` and `BIN` values.
* New feature: Created build options `WIN32ARDUINO_BUILD_TEST` and `WIN32ARDUINO_BUILD_SAMPLES`.
* The dependency to Apache Ant was removed for clarity and easier dependency management. The script functionalities are moved to cmake's CMakeLists.txt.
* The library demo projects are now called `samples` and were moved to `/samples` folder.
* Using RapidAssist v0.3.4.
* Using 'c++ best practices' file structure (/include /src /lib /test)
* Fixed issue #13 - Realtime clock strategy using microseconds timer.
* Fixed issue #14 - Implement pinMode() function properly.
* Fixed issue #19 - ATOMIC_BLOCK macro.
* Fixed issue #22 - Replace downloaded googletest third party library by a git submodule.
* Fixed issue #25 - Use RapidAssist as a git submodule.

Changes for 2.1.0:

* Fixed issue #15 - win32Arduino on Linux
* Fixed issue #16 - Add support for F macro
* New feature: Removed as much as possible the use of powershell scripts. Now using cross-platform tools like cmake, Apache Ant, curl.
* New feature: Now using Apache Ant for most build automation tasks.
* New feature: Implemented support for Travis CI build server.
* New feature: Building actual Arduino tutorials is now part of the test procedure. See `/src/demos` or `ant demos` for details.

Changes for 2.0.0:

* Fixed issue  #1 - Rename library namespace to testarduino.
* Fixed issue  #3 - Refactor the time strategies.
* Fixed issue  #6 - Remove template functions and replace by macro definitions.
* Fixed issue  #7 - Add cmake support to be able to generate project files for each version of Visual Studio.
* Fixed issue #10 - Assign callback functions for time based event programming.
* Fixed issue #11 - Create new API functions for attachFunctionCallback().
* Fixed issue #12 - Move time handling code from arduino.cpp to new independent classes.

Changes for 1.4.0:

* Fixed issue #4: Move non-arduino functions to the library namespace
* New feature: Renamed testWin32Arduino to win32Arduino_unittest.
* New feature: Renamed win32arduino to win32Arduino.

Changes for 1.3.39:

* New feature: Implemented support for forcing current time in SIMULATION mode.
* New feature: Implemented SREG and cli() function support
* New feature: Fixed analogWrite() signature
* New feature: Fixed constants definitions based on Arduino Nano v3 values
* New feature: Removed support for HIGH and LOW interrupts support which is creating too much confusion.

Changes for 1.2.30:

* New feature: Fixed tone() signature to match arduino's IDE.

Changes for 1.1.28:

* New feature: Implemented both simulated & realtime clock handling. The desired strategy is user selectable.

Changes for 1.0.21:

* First public release.
