<?xml version="1.0" encoding="iso-8859-1"?>
<project name="macros" default="" basedir=".">
  <!--
  ************************************************************************************************************************
  *                                                  Macro definitions                                                   *
  ************************************************************************************************************************
  -->

  <!--From https://stackoverflow.com/a/19533292 -->
  <macrodef name="required-property" description="Fails the build if the given property is not defined.">
    <attribute name="name"/>
    <attribute name="prop" default="@{name}"/>
    <attribute name="if" default="___"/>
    <attribute name="unless" default="___"/>
    <sequential>
      <fail message="You must set property '@{name}'">
        <condition>
          <and>
            <not>
              <isset property="@{prop}"/>
            </not>
            <or>
              <equals arg1="@{if}" arg2="___"/>
              <isset property="@{if}"/>
            </or>
            <or>
              <equals arg1="@{unless}" arg2="___"/>
              <not>
                <isset property="@{unless}"/>
              </not>
            </or>
          </and>
        </condition>
      </fail>
    </sequential>
  </macrodef>

  <macrodef name="findfile" description="Finds the first file in @{dir} that matches @{name}">
    <attribute name="property"/>
    <attribute name="dir"/>
    <attribute name="name"/>
    <sequential>
      <first id="@{property}.found">
        <fileset dir="@{dir}" includes="@{name}" />
      </first>
      <condition property="@{property}" value="${toString:@{property}.found}">
        <not>
          <equals arg1="${toString:@{property}.found}" arg2="" />
        </not>
      </condition>
    </sequential>
  </macrodef>

  <macrodef name="findfolder" description="Finds the first folder in @{dir} that matches @{name}">
    <attribute name="property"/>
    <attribute name="dir"/>
    <attribute name="name"/>
    <sequential>
      <first id="@{property}.found">
        <dirset dir="@{dir}" includes="@{name}" />
      </first>
      <condition property="@{property}" value="${toString:@{property}.found}">
        <not>
          <equals arg1="${toString:@{property}.found}" arg2="" />
        </not>
      </condition>
    </sequential>
  </macrodef>
  
  <macrodef name="install-third-party" description="Download and install a third party zip file">
    <attribute name="name"/>
    <attribute name="dir"/>
    <attribute name="url"/>
    <sequential>
      <echo>Installing @{name} package...</echo>
      <echo />
      
      <echo>Deleting previous @{name} installations...</echo>
      <delete dir="@{dir}" />

      <local name="tempfile" />
      <property name="tempfile" location="${env.TEMP}/@{name}.zip" />
      
      <echo>Downloading @{name} zip archive from '@{url}' to file '${tempfile}'...</echo>
      <get src="@{url}" dest="${tempfile}" />

      <echo>Extracting zip file to install directory...</echo>
      <unzip src="${tempfile}" dest="@{dir}"/>

      <local name="firstfolder" />
      <findfolder property="firstfolder" dir="@{dir}" name="**/@{name}*" />
      <required-property name="firstfolder" />

      <property name="@{name}.dir" location="${firstfolder}" />
      
      <echo>Package '@{name}' installed to folder '${firstfolder}'.</echo>
      <echo/>
      
    </sequential>
  </macrodef>

  <macrodef name="cmake" description="Generate a cmake project">
    <attribute name="name"/>
    <attribute name="config"/>
    <attribute name="build"/>
    <attribute name="source"/>
    <attribute name="args" default=""/>
    <sequential>
      <property name="@{name}.build.dir" location="@{build}" />
      <property name="@{name}.source.dir" location="@{source}" />
      
      <mkdir dir="@{build}" />

      <echo>Generating '@{name}' build project in '@{config}' mode...</echo>
      <exec executable="cmake" dir="@{build}" failonerror="true">
        <arg value="@{args}"/>
        <arg value="-DCMAKE_BUILD_TYPE=@{config}"/>
        <arg value="@{source}"/>
      </exec>
      <echo/>
    </sequential>
  </macrodef>

  <macrodef name="cmake-build" description="Build a cmake project">
    <attribute name="name"/>
    <attribute name="build"/>
    <attribute name="source"/>
    <attribute name="config"/>
    <attribute name="args" default=""/>
    <sequential>
      <echo>Building '@{name}' in '@{config}' mode...</echo>
      <exec executable="cmake" dir="@{build}" failonerror="true">
        <arg value="@{args}"/>
        <arg value="--build"/>
        <arg value="@{build}"/>
        <arg value="--config"/>
        <arg value="@{config}"/>
      </exec>
      <echo/>
    </sequential>
  </macrodef>

</project>