<?xml version="1.0" encoding="iso-8859-1"?>
<project name="win32Arduino" default="" basedir=".">

  <!-- Default property values -->
  <property name="home.dir" location="${basedir}/../.." />
  <property name="src.dir" location="${home.dir}/src" />
  <property name="deploy.dir" location="${home.dir}/deploy" />
  <property name="publish.dir" location="${home.dir}/publish" />
  <property name="build.dir" location="${home.dir}/build" />
  <property name="thirdparty.dir" location="${home.dir}/third_party" />

  <include file="macros.xml"/>

  <target name="-init" depends="" description="">

    <!--Define current time for logs-->
    <tstamp>
      <format property="build.time" pattern="yyyy-MM-dd HH:mm:ss"/>
    </tstamp>

    <!--for ComSpec-->
    <property environment="env"/>

    <echo>  Java Home :       ${java.home}</echo>
    <echo>  Build File :      ${ant.file}</echo>
    <echo>  Run Date :        ${build.time}</echo>
    <echo>  Run by :          ${user.name}</echo>
    <echo>  Base Dir :        ${basedir}</echo>
    <echo>  Deploy Dir :      ${deploy.dir}</echo>
    <echo>  Build Dir :       ${build.dir}</echo>
    <echo>  Publish Dir :     ${publish.dir}</echo>
    <echo>  Third Party Dir : ${thirdparty.dir}</echo>

    <mkdir dir="${deploy.dir}" />
    <mkdir dir="${build.dir}" />
    <mkdir dir="${publish.dir}" />
    <mkdir dir="${thirdparty.dir}" />
  </target>

  <target name="-findConfiguration" depends="-init" description="Defines variable 'build.configuration' based on the current system">
    <!--Appveyor defines the build configuration in 'Configuration' variable-->
    <!--https://www.appveyor.com/docs/environment-variables/-->
    <condition property="build.configuration" value="${env.Configuration}">
      <isset property="env.Configuration"/>
    </condition>

    <!--Travis CI does not specify a designated environment variable-->
    <!--See https://docs.travis-ci.com/user/environment-variables/-->
    <!--Some projects defines the CONFIG environment variable: https://github.com/forexample/hunter-simple/blob/e2eae72525a947058ac24c1b4f2d0655761b5e89/.travis.yml-->
    <condition property="build.configuration" value="${env.CONFIG}">
      <isset property="env.CONFIG"/>
    </condition>

    <!--CMAKE requires the command line argument -DCMAKE_BUILD_TYPE=Debug-->
    <!--It is not an environment variable but some system may define the value-->
    <condition property="build.configuration" value="${env.CMAKE_BUILD_TYPE}">
      <isset property="env.CMAKE_BUILD_TYPE"/>
    </condition>

    <!--Look for other known variables:-->
    <condition property="build.configuration" value="${env.BUILD_CONFIGURATION}">
      <isset property="env.BUILD_CONFIGURATION"/>
    </condition>
    <condition property="build.configuration" value="${env.BUILD_TYPE}">
      <isset property="env.BUILD_TYPE"/>
    </condition>

    <!--If all else fails, default to Release configuration-->
    <property name="build.configuration" value="Release" />

    <echo>Found build configuration: ${build.configuration}</echo>
  </target>

  <target name="disable_unittest" description="Delete all build artifacts." depends="-init" >
    <local name="targetfile" />
    <property name="targetfile" value="${src.dir}\CMakeLists.txt" />
    <echo>Disabling unit tests from ${targetfile}...</echo>

    <local name="token1" />
    <property name="token1" value="add_subdirectory(win32Arduino_unittest)" />
    <replace file="${targetfile}" token="${token1}" value="#${token1}" />

    <local name="token2" />
    <property name="token2" value="add_dependencies(win32Arduino_unittest win32Arduino)" />
    <replace file="${targetfile}" token="${token2}" value="#${token2}" />

    <echo>Writing file ${targetfile} completed.</echo>
  </target>

  <target name="cleanup" description="Delete all build artifacts." depends="-init" >
    <delete includeEmptyDirs="true">
      <fileset dir="${build.dir}">
        <include name="**/bin/"/>
        <include name="**/Debug/"/>
        <include name="**/Release/"/>
        <include name="**/debug/"/>
        <include name="**/release/"/>
        <include name="**/Win32/"/>
      </fileset>
    </delete>
  </target>

  <target name="clean" description="Delete build directory." depends="-init" >
    <delete dir="${build.dir}" />
    <delete dir="${deploy.dir}" />
    <delete dir="${publish.dir}" />
  </target>

  <target name="-cmake.generate" description="Generate build file from sources" depends="-init, -findConfiguration" >
    <cmake name="win32Arduino" build="${build.dir}" source="${home.dir}" config="${build.configuration}" />
  </target>

  <target name="compile" description="Build all source files." depends="-init, -findConfiguration, -cmake.generate" >
    <cmake-build name="win32Arduino" build="${build.dir}" source="${home.dir}" config="${build.configuration}" />
  </target>

  <!-- Test TARGETS (start) -->
  <target name="-test.unit.find" description="Finds the unit test executable">
    <findfile property="test.unit.exec" dir="${build.dir}/bin" name="**/win32Arduino_unittest*" />
    <required-property name="test.unit.exec" />
    <echo>Found unit test exec: ${test.unit.exec}</echo>
  </target>
  
  <target name="-test.unit" description="Runs unit tests for the project." depends="-test.unit.find">
    <echo>Unit Tests - START</echo>

    <!--Find unit test directory-->
    <dirname file="${test.unit.exec}" property="test.unit.dir" />
    
    <echo>Deleting previous test results</echo>
    <property name="test.unit.results.pattern" value="**/win32Arduino_unittest.*.xml" />
    <delete>
      <fileset dir="${test.unit.dir}">
        <include name="${test.unit.results.pattern}"/>
        <include name="**/*.log"/>
      </fileset>
    </delete>
    <echo />

    <!--Run unit tests-->
    <exec executable="${test.unit.exec}"
          dir="${test.unit.dir}"
          failonerror="false" />
    <echo />

    <!--Find test result file-->
    <local name="test.unit.resultsfile" />
    <findfile property="test.unit.resultsfile" dir="${test.unit.dir}" name="${test.unit.results.pattern}" />
    <required-property name="test.unit.resultsfile" />
    <echo>Found unit test results: ${test.unit.resultsfile}</echo>

    <!--Copy to publish folder-->
    <copy file="${test.unit.resultsfile}" todir="${publish.dir}" />

    <echo>Unit Tests - END</echo>
  </target>
  <target name="-test.system" description="Runs system tests for the project.">
  </target>
  <target name="test" description="Runs unit &amp; system tests." depends="-init, -findConfiguration, -test.unit, -test.system" />
  <!-- Test TARGETS (end) -->

  <target name="-googletest.install" depends="-init, -findConfiguration">
    <install-third-party name="googletest" dir="${thirdparty.dir}" url="https://codeload.github.com/google/googletest/zip/release-1.6.0" />
    <!--<cmake-compile name="googletest" build="${googletest.dir}/build" source="${googletest.dir}" args="-Dgtest_force_shared_crt=ON -DCMAKE_CXX_FLAGS_DEBUG=/MDd -DCMAKE_CXX_FLAGS_RELEASE=/MD" />-->
    <cmake       name="googletest" build="${googletest.dir}/build" source="${googletest.dir}" config="${build.configuration}" args="-Dgtest_force_shared_crt=ON -DCMAKE_CXX_FLAGS_DEBUG=/MDd -DCMAKE_CXX_FLAGS_RELEASE=/MD" />
    <cmake-build name="googletest" build="${googletest.dir}/build" source="${googletest.dir}" config="${build.configuration}" />
  </target>

  <target name="install" depends="-init, -googletest.install" description="Installs required libraries in third_party directory">
  </target>

  <target name="debug" depends="-init, -findConfiguration" />
</project>
